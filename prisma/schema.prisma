generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id          String   @id @default(cuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime? // Keep nullable for now to avoid migration issues
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  heroes      LatestHero[]
  stats       HeroStats[]

  @@index([active, startDate])
  @@index([active, createdAt])
}

model HeroStats {
  id        Int      @id @default(autoincrement())
  color     String
  sessionId String?  // Optional - null means "all sessions"
  session   Session? @relation(fields: [sessionId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())

  // New indexes for session filtering
  @@index([sessionId, color, createdAt])
  // Keep existing index for backward compatibility
  @@index([color, createdAt])
}

model LatestHero {
  id             Int      @id @default(autoincrement())
  name           String
  userName       String?
  personalityType String
  imageId        String   @unique
  color          String
  gender         String
  sessionId      String?  // Optional - null means "all sessions"
  session        Session? @relation(fields: [sessionId], references: [id], onDelete: SetNull)
  colorScores    Json     @default("{}")
  printed        Boolean  @default(false)
  carousel       Boolean  @default(false)
  createdAt      DateTime @default(now())

  // New indexes for session filtering
  @@index([sessionId, carousel, createdAt])
  @@index([sessionId, color])
  @@index([sessionId, createdAt])
  // Keep existing indexes for backward compatibility
  @@index([carousel, createdAt])
  @@index([color])
  @@index([createdAt])
}
